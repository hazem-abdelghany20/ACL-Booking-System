# Application Configuration
spring.application.name=ApiGateway
server.port=8000

# Spring Cloud Gateway Routes Configuration for Docker environment
spring.cloud.gateway.routes[0].id=user-auth-service
spring.cloud.gateway.routes[0].uri=http://user-auth-service:8080
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/auth/**, /api/oauth/**, /api/supabase/**, /api/users/**

spring.cloud.gateway.routes[1].id=event-service
spring.cloud.gateway.routes[1].uri=http://event-service:8081
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/events/**, /api/categories/**

spring.cloud.gateway.routes[2].id=booking-service
spring.cloud.gateway.routes[2].uri=http://booking-service:8090
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/bookings/**

spring.cloud.gateway.routes[3].id=notification-service
spring.cloud.gateway.routes[3].uri=http://notification-service:8092
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/notifications/**

spring.cloud.gateway.routes[4].id=static-resources
spring.cloud.gateway.routes[4].uri=http://user-auth-service:8080
spring.cloud.gateway.routes[4].predicates[0]=Path=/static/**

spring.cloud.gateway.routes[5].id=frontend-fallback
spring.cloud.gateway.routes[5].uri=http://user-auth-service:8080
spring.cloud.gateway.routes[5].predicates[0]=Path=/**
spring.cloud.gateway.routes[5].predicates[1]=Method=GET

# Security Configuration
jwt.secret=hotelBookingSystemSecretKey2025

# Redis Configuration (for Session Caching)
spring.data.redis.host=redis
spring.data.redis.port=6379
# spring.redis.password=your-password    # Uncomment if your Redis requires authentication

# Session Configuration
spring.session.store-type=redis
spring.session.redis.namespace=hotel:session
spring.session.redis.flush-mode=on-save

# Spring Boot Actuator
management.endpoints.web.exposure.include=health,info,gateway
management.endpoint.health.show-details=always

# Cross-Origin Resource Sharing (CORS)
spring.cloud.gateway.globalcors.add-to-simple-url-handler-mapping=true
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowed-origins=http://localhost:5173,http://localhost:5174
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowed-headers=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allow-credentials=true
spring.cloud.gateway.globalcors.corsConfigurations.[/**].max-age=3600

# Rate Limiting (optional)
# spring.cloud.gateway.default-filters[0].name=RequestRateLimiter
# spring.cloud.gateway.default-filters[0].args.redis-rate-limiter.replenishRate=10
# spring.cloud.gateway.default-filters[0].args.redis-rate-limiter.burstCapacity=20
# spring.cloud.gateway.default-filters[0].args.key-resolver=#{@ipKeyResolver}

# Circuit Breaker Configuration (optional)
# resilience4j.circuitbreaker.instances.default.slidingWindowSize=10
# resilience4j.circuitbreaker.instances.default.permittedNumberOfCallsInHalfOpenState=3
# resilience4j.circuitbreaker.instances.default.waitDurationInOpenState=5000
# resilience4j.circuitbreaker.instances.default.failureRateThreshold=50

# Logging Configuration
logging.level.org.springframework.cloud.gateway=INFO
logging.level.org.springframework.security=INFO
logging.level.com.example.hotel.apigateway=DEBUG